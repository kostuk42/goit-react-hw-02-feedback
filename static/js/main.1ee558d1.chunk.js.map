{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","total","FeedbackOptions","onClick","props","onChangeState","Component","Statistics","console","log","this","good","neutral","bad","positivePercentage","className","styles","list","Notification","App","state","vote","setState","Math","round","countTotalFeedback","changeState","bind","countPositiveFeedbackPercentage","ReactDOM","render","document","getElementById"],"mappings":"sIACAA,EAAOC,QAAU,CAAC,KAAO,2B,sMCiBVC,EAbC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,EAAoBC,MAApB,OACZ,oCACI,6BAAKF,IAEHC,MCLWE,G,kKACjB,WAAU,IAAD,OACL,OACI,qCACA,wBAAQC,QAAS,kBAAM,EAAKC,MAAMC,cAAc,SAAhD,kBACA,wBAAQF,QAAS,kBAAM,EAAKC,MAAMC,cAAc,YAAhD,qBACA,wBAAQF,QAAS,kBAAM,EAAKC,MAAMC,cAAc,QAAhD,wB,GANiCC,c,gBCCxBC,E,4JACjB,WACIC,QAAQC,IAAIC,KAAKN,OACjB,MAA0DM,KAAKN,MAAvDO,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKZ,EAA5B,EAA4BA,MAAOa,EAAnC,EAAmCA,mBACnC,OAEQ,qBAAIC,UAAWC,IAAOC,KAAtB,UACA,wCAAWN,KAEX,2CAAcC,KAEd,uCAAUC,KAEV,yCAAYZ,KAEZ,uDAA0Ba,EAA1B,c,GAfwBR,aCDzBY,G,MAFM,kBAAO,sDCKPC,E,4MAGnBC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,iDAEP,SAAYQ,GACVX,KAAKY,UAAS,SAACF,GACb,OAAO,eAAEC,EAAOD,EAAMC,GAAQ,MAEhCb,QAAQC,IAAIC,KAAKU,S,gCAEnB,WAEE,OAAOV,KAAKU,MAAMT,KAAOD,KAAKU,MAAMR,QAAUF,KAAKU,MAAMP,M,6CAE3D,WACE,OAAOU,KAAKC,MAAMd,KAAKU,MAAMT,KAAKD,KAAKe,qBAAqB,MAAQ,I,oBAEtE,WAEE,OACC,qCACA,cAAC,EAAD,CAAS1B,MAAM,kBAAf,SACE,cAAC,EAAD,CACKM,cAAeK,KAAKgB,YAAYC,KAAKjB,UAGzC,cAAC,EAAD,CAASX,MAAM,aACNE,MAAOS,KAAKe,qBADrB,SAGGf,KAAKe,qBACC,cAAC,EAAD,CACCd,KAAOD,KAAKU,MAAMT,KAClBC,QAAUF,KAAKU,MAAMR,QACrBC,IAAMH,KAAKU,MAAMP,IACjBZ,MAAOS,KAAKe,qBACZX,mBAAoBJ,KAAKkB,oCAC1B,cAAC,EAAD,a,GAxCgBtB,aCDjCuB,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.1ee558d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3SpCY\"};","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\n// import styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children, total }) => (\r\n    <section>\r\n        <h2>{title}</h2>\r\n        \r\n        { children }\r\n        \r\n    </section>\r\n)\r\nSection.propTypes = {\r\n    title: propTypes.string.isRequired,\r\n    total: propTypes.number,\r\n    children: propTypes.any.isRequired\r\n};\r\nexport default Section;","import React, { Component } from 'react';\r\nimport './FeedbackOptions.css';\r\nimport propTypes from 'prop-types';\r\n\r\nexport default class FeedbackOptions extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n            <button onClick={() => this.props.onChangeState('good')}>Good</button>\r\n            <button onClick={() => this.props.onChangeState('neutral')}>Neutral</button>\r\n            <button onClick={() => this.props.onChangeState('bad')}>Bad</button>\r\n            </>\r\n     )\r\n }\r\n    \r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    onChangeState: propTypes.func.isRequired\r\n}","import React, { Component } from 'react';\r\n// import Section from '../Section/Section';\r\nimport propTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nexport default class Statistics extends Component {\r\n    render() {\r\n        console.log(this.props)\r\n        const { good, neutral, bad, total, positivePercentage } = this.props;\r\n        return (\r\n            \r\n                <ul className={styles.list}>\r\n                <li>Good: {good}</li>\r\n                \r\n                <li>Neutral: {neutral}</li>\r\n                \r\n                <li>Bad: {bad}</li>\r\n                \r\n                <li>Total: {total}</li>\r\n             \r\n                <li>positive Percentage: {positivePercentage}%</li>\r\n                \r\n                </ul>\r\n    )\r\n}\r\n    \r\n}\r\n\r\nStatistics.propTypes = {\r\n\tgood: propTypes.number.isRequired,\r\n\tbad: propTypes.number.isRequired,\r\n\tneutral: propTypes.number.isRequired,\r\n\ttotal: propTypes.number.isRequired,\r\n\tpositivePercentage: propTypes.number.isRequired\r\n};","import React from 'react';\r\nimport './Notification.css';\r\nconst Notification = () => (<div>No feedback given</div>)\r\n\r\nexport default Notification","import React, { Component } from 'react';\nimport './App.css';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nexport default class App extends Component {\n  \n  // total = this.countTotalFeedback()\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n  changeState(vote) {\n    this.setState((state) => {\n      return {[vote]: state[vote] + 1}\n    })\n    console.log(this.state);\n  }\n  countTotalFeedback() {\n    \n    return this.state.good + this.state.neutral + this.state.bad\n  }\n  countPositiveFeedbackPercentage() {\n    return Math.round(this.state.good/this.countTotalFeedback()*100) || 0\n   }\n  render() {\n      \n    return (\n     <>\n     <Section title=\"feedbackOptions\">\n       <FeedbackOptions\n            onChangeState={this.changeState.bind(this)}\n       />\n        </Section>\n        <Section title=\"statistics\"\n                 total={this.countTotalFeedback()}\n        >\n          {this.countTotalFeedback() ? \n                 <Statistics\n                  good={ this.state.good }\n                  neutral={ this.state.neutral }\n                  bad={ this.state.bad }\n                  total={this.countTotalFeedback()}\n                  positivePercentage={this.countPositiveFeedbackPercentage()}\n            /> : <Notification />\n            }\n        </Section> \n        \n      </>\n     \n  )\n  }\n  \n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App \n       />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}